#include <bits/stdc++.h>
#define DEBUG cout << "---------- " << __LINE__ << " ----------" << endl;
#define endl "\n"
#define SZ(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define count1_Binary(x) __builtin_popcountll(x)//求一个数二进制里有多少个1
#define smallest_1(x) __builtin_ffsll(x)//求最小的1在第几位
using namespace std;
using ll = long long;
using u64 = unsigned long long;
const int inf = 0x7fffffff;
const long long mod = 1e9+7;
const double Pi = acos(-1);
const int N = 2005;
inline ll read(){ll x=0;char z;while((z=getchar())<48);do x=x*10+(z^48);while((z=getchar())>47);return x;}
//<head>

//最大不下降子序列string版

string A[N];
ll dp[N];

void solve(){
    int n;
    cin>> n;
    for(int i = 1; i <= n; i ++) cin>> A[i];
    fill(dp, dp+N, 1);
    ll ans = -1;
    for(int i = 1; i <= n; i ++){
        for(int j = 1; j < i; j ++){
            if(A[i].substr(0, SZ(A[j])) == A[j] && dp[i] < dp[j]+1) dp[i] = dp[j]+1;
        }
        ans = max(ans, dp[i]);
    }
    cout<< ans;
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    solve();
    return 0;
}


