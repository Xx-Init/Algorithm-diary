#include <bits/stdc++.h>
#define DEBUG cout << "---------- " << __LINE__ << " ----------" << endl;
#define endl "\n"
#define SZ(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define count1_Binary(x) __builtin_popcountll(x)//求一个数二进制里有多少个1
#define smallest_1(x) __builtin_ffsll(x)//求最小的1在第几位
#define lowbit(x) ((x&(-x))) 
using namespace std;
using ll = long long;
using u64 = unsigned long long;
const int inf = 0x7fffffff;
const long long mod = 1e9+7;
const double Pi = acos(-1);
const int N = 1e4+6;
inline ll read(){ll x=0;char z;while((z=getchar())<48);do x=x*10+(z^48);while((z=getchar())>47);return x;}
//<head>

//并查集

//单纯的一个分类统计

int fa[N];

inline void init(int n){
    for(int i = 1; i <= n; i ++)
        fa[i] = i;
}

inline int find(int x){
    if(fa[x] == x) return x;
    else return fa[x] = find(fa[x]);
}

inline void merge(int x, int y){
    fa[find(x)] = find(y);
}

void solve(){
    int n = read(), m, x, y;
    while(n){
        m = read();
        init(n);
        for(int i = 1; i <= m; i ++){
            x = read(); y = read();
            merge(x, y);
        }
        int tot = -1;
        for(int i = 1; i <= n; i ++)
            tot += (find(i) == i)? 1: 0; 
        cout<< tot<< endl;
        n = read();
    }
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    solve();
    return 0;
}


